{"version":3,"sources":["assets/icons/idea.svg","assets/icons/logout.svg","assets/icons/pen.svg","assets/icons/twitter.svg","assets/icons/logo.svg","assets/icons/plus.svg","assets/icons/chain.svg","assets/icons/rubbish.svg","theme/GlobalStyle.js","context/index.js","theme/mainTheme.js","templates/MainTemplate.js","reducers/index.js","store/index.js","components/atoms/ButtonIcon/ButtonIcon.js","hoc/withContext.js","components/organisms/Sidebar/Sidebar.js","templates/UserPageTemplate.js","components/atoms/Heading/Heading.js","components/atoms/Input/Input.js","components/atoms/Button/Button.js","components/organisms/NewItemBar/NewItemBar.js","actions/index.js","templates/GridTemplate.js","components/atoms/Paragraph/Paragraph.js","components/molecules/Card/Card.js","views/Notes.js","views/Articles.js","views/Twitters.js","routes/index.js","views/Root.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","PageContext","React","createContext","theme","notes","twitters","articles","sidebar","listColor","lightGray","darkGray","light","bold","fontSize","xxs","xs","s","m","l","xl","MainTemplate","state","pageType","setCurrentPage","prevState","pageTypes","pathname","props","location","filter","page","includes","currentPage","setState","this","prevProps","children","Provider","value","Component","withRouter","initialState","id","title","content","twitterName","articleUrl","rootReducer","action","type","payload","itemType","item","store","createStore","notesApp","window","__REDUX_DEVTOOLS_EXTENSION__","ButtonIcon","styled","button","icon","card","css","withContext","Consumer","context","pageContext","StyledWrapper","nav","activeColor","note","StyledLogoLink","NavLink","logoIcon","StyledLogoutButton","StyledLinksList","ul","Sidebar","to","as","penIcon","activeclass","twitterIcon","ideaIcon","logoutIcon","defaultProps","UserPageTemplate","Heading","h1","big","Input","input","regular","darkGrey","Button","div","activecolor","isVisible","StyledForm","Form","StyledTextArea","StyledInput","NewItemBar","addItem","handleClose","initialValues","created","onSubmit","values","handleChange","handleBlur","name","placeholder","onChange","onBlur","connect","dispatch","itemContent","Math","random","toString","substr","addItemAction","StyledGrid","StyledPageHeader","StyledHeading","StyledButtonIcon","GridTemplate","isNewItemBarVisible","toggleNewItemBar","onClick","plusIcon","Paragraph","p","InnerWrapper","flex","StyledAvatar","img","StyledLinkButton","a","LinkIcon","Card","removeItem","handleCardClick","src","href","rubbishIcon","removeItemAction","Notes","map","cardType","key","Articles","Twitters","routes","Root","basename","process","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b97d1210.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/idea.d4ed3d26.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.2252c0c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.76706925.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.fe9e349f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9ab12772.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.1e71bac7.svg\";","module.exports = __webpack_public_path__ + \"static/media/chain.b76bfe5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/rubbish.bf60e5e3.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n*, *::before, *::after{\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n  \r\n  html {\r\n    font-size: 62.5%; \r\n  }\r\n\r\nbody {\r\n  padding-left: 80px;\r\n  font-family:  sans-serif;\r\n  font-size: 1.6rem;\r\n\r\n}`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\n\r\nconst PageContext = React.createContext('notes');\r\n\r\nexport default PageContext;\r\n","export const theme = {\r\n  notes: '#E5E3E1',\r\n  twitters: '#CEDBDA',\r\n  articles: '#D5C3BF',\r\n  sidebar: '#A2ABB5',\r\n  listColor: '#F8D2CE',\r\n  lightGray: '#F0F0F0',\r\n  darkGray: '#EBF0EC',\r\n  light: 500,\r\n  bold: 700,\r\n  fontSize: {\r\n    xxs: '1rem',\r\n    xs: '1.2rem',\r\n    s: '1.6rem',\r\n    m: '2.1rem',\r\n    l: '2.4rem',\r\n    xl: '4rem',\r\n  },\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport GlobalStyle from 'theme/GlobalStyle';\r\nimport PageContext from 'context';\r\nimport { theme } from 'theme/mainTheme';\r\n\r\nclass MainTemplate extends Component {\r\n  state = {\r\n    pageType: 'notes',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setCurrentPage();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.setCurrentPage(prevState);\r\n  }\r\n\r\n  setCurrentPage = (prevState = '') => {\r\n    const pageTypes = ['twitters', 'articles', 'notes'];\r\n    const {\r\n      location: { pathname },\r\n    } = this.props;\r\n\r\n    const [currentPage] = pageTypes.filter((page) => pathname.includes(page));\r\n\r\n    if (prevState.pageType !== currentPage) {\r\n      this.setState({ pageType: currentPage });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { pageType } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <PageContext.Provider value={pageType}>\r\n          <GlobalStyle />\r\n          <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n        </PageContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMainTemplate.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(MainTemplate);\r\n","const initialState = {\r\n  twitters: [\r\n    {\r\n      id: 1,\r\n      title: 'Temporary changes',\r\n      content:\r\n        'We’re experiencing high call volume. If you’re not scheduled to travel in the next several days, please wait to call our Reservations team so they can better help those needing immediate assistance. If you want to cancel your trip, you can do it so. ',\r\n      twitterName: 'americanair',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Special chartered flight',\r\n      content:\r\n        'The embassy is working to arrange a special chartered flight for US citizens and their families departing Dhaka. The flight is not yet authorized or confirmed, but they are targeting April 21',\r\n\r\n      twitterName: 'TravelGov',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Working hours of Embassy',\r\n      content:\r\n        'The U.S. Embassy will maintain normal working hours March 29 to April 2, 2020 and thereafter, including American Citizen Services appointments and emergency services. ',\r\n\r\n      twitterName: 'usembassydhaka',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'MileagePlus Premier',\r\n      content:\r\n        'We are extending current MileagePlus Premier status levels to January 31, 2022 and lowering thresholds for status to help you reach an even higher tier. Learn more about the other steps we’re taking, like extending PlusPoints, to thank you for your loyalty',\r\n\r\n      twitterName: '@united',\r\n    },\r\n  ],\r\n  articles: [\r\n    {\r\n      id: 1,\r\n      title: 'The 29 Best Travel Apps in 2020',\r\n      content:\r\n        'Whether you are heading off on a gap year, packing light for a couple of weeks summer break or getting stuck into the culture of a country for the foreseeable, there is one thing we all have in common: the smartphone.',\r\n      articleUrl: 'https://www.danflyingsolo.com/best-apps-for-travel/',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Essential Travel Items',\r\n      content:\r\n        'Wondering what to pack for your first big trip abroad? It’s not always easy to pack the essential travel items only! Especially if you’re a beginner in the backpacking world. Welcome!',\r\n      articleUrl: 'https://abrokenbackpack.com/2018/07/19/essential-travel-items/',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'The World’s Best Islands Awards',\r\n      content:\r\n        'Some of the world’s best islands got chosen for their unique nature or cultural significance. And others for their mouthwatering luxury and photo-worthiness.',\r\n      articleUrl: 'https://mylifesamovie.com/worlds-best-islands-awards/',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Iran is NOT What You Think!',\r\n\r\n      content:\r\n        'When we (Americans) think about Iran, we tend to only think of negative things such as terrorism.  But what about the 80 million innocent locals who live across this fascinating country?',\r\n      articleUrl: 'https://youtube.com/helloroman',\r\n    },\r\n  ],\r\n  notes: [\r\n    {\r\n      id: 1,\r\n      title: 'Immigration prep',\r\n      content:\r\n        'US Citizens can research visa rules at travel.state.gov, plus required documents, current warnings, vax needed, and local embassy details.',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Submit a debit card travel notice',\r\n      content:\r\n        \"Submit a travel notice to my bank with the country or countries of travel so that they are aware of the travel plans, all my bank cards will work when I arrive, and my transactions won't be tagged fraud.\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Download stuff',\r\n      content:\r\n        'Download fun movies or interesting documentaries for offline viewing during travel. Download books!',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Passport',\r\n      content:\r\n        'Check the expiration date of the passport now, and if I need to renew, check the U.S. Department of State’s website to find the nearest passport facility.',\r\n    },\r\n  ],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      return {\r\n        ...state,\r\n        [action.payload.itemType]: [...state[action.payload.itemType], action.payload.item],\r\n      };\r\n    case 'REMOVE_ITEM':\r\n      return {\r\n        ...state,\r\n        [action.payload.itemType]: [\r\n          ...state[action.payload.itemType].filter((item) => item.id !== action.payload.id),\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport notesApp from 'reducers'; // ==rootReducer\r\n\r\n/* eslint-disable no-underscore-dangle */\r\n\r\nconst store = createStore(\r\n  notesApp /* preloadedState, */,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n/* eslint-enable */\r\n\r\nexport default store;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst ButtonIcon = styled.button`\r\n  display: block;\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 20px;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 50%;\r\n  background-size: 60%;\r\n  border: none;\r\n  &.active {\r\n    background-color: white;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n\r\n  ${({ card }) =>\r\n    card &&\r\n    css`\r\n      width: 40px;\r\n      height: 40px;\r\n    `}\r\n\r\n  ${({ card }) =>\r\n    card &&\r\n    css`\r\n      width: 40px;\r\n      height: 40px;\r\n      @media (max-width: 576px) {\r\n        width: 25px;\r\n        height: 25px;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport default ButtonIcon;\r\n","import React from 'react';\r\nimport PageContext from 'context';\r\n\r\nconst withContext = (Component) => {\r\n  return function contextComponent(props) {\r\n    return (\r\n      <PageContext.Consumer>\r\n        {(context) => <Component {...props} pageContext={context} />}\r\n      </PageContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withContext;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\r\nimport ideaIcon from 'assets/icons/idea.svg';\r\nimport logoutIcon from 'assets/icons/logout.svg';\r\nimport penIcon from 'assets/icons/pen.svg';\r\nimport twitterIcon from 'assets/icons/twitter.svg';\r\nimport logoIcon from 'assets/icons/logo.svg';\r\nimport withContext from 'hoc/withContext';\r\n\r\nconst StyledWrapper = styled.nav`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  padding: 25px 0;\r\n  width: 120px;\r\n  height: 120vh;\r\n  background-color: ${({ theme }) => theme.sidebar};\r\n  /* background-color: ${({ activeColor, theme }) =>\r\n    activeColor ? theme[activeColor] : theme.note}; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n   @media (max-width: 576px) {\r\n    width: 70px;\r\n  }\r\n`;\r\n\r\nconst StyledLogoLink = styled(NavLink)`\r\n  display: block;\r\n  width: 120px;\r\n  height: 100px;\r\n  background-image: url(${logoIcon});\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 50%;\r\n  background-size: 100%;\r\n  border: none;\r\n  margin-bottom: 8vh;\r\n\r\n  @media (max-width: 576px) {\r\n    width: 80px;\r\n  }\r\n`;\r\n\r\nconst StyledLogoutButton = styled(ButtonIcon)`\r\n  margin-top: auto;\r\n`;\r\n\r\nconst StyledLinksList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst Sidebar = ({ pageContext }) => (\r\n  <StyledWrapper activeColor={pageContext}>\r\n    <StyledLogoLink to=\"/\" />\r\n    <StyledLinksList>\r\n      <li>\r\n        <ButtonIcon as={NavLink} to=\"/notes\" icon={penIcon} activeclass=\"active\" />\r\n      </li>\r\n      <li>\r\n        <ButtonIcon as={NavLink} to=\"/twitters\" icon={twitterIcon} activeclass=\"active\" />\r\n      </li>\r\n      <li>\r\n        <ButtonIcon as={NavLink} to=\"/articles\" icon={ideaIcon} activeclass=\"active\" />\r\n      </li>\r\n    </StyledLinksList>\r\n    <StyledLogoutButton as={NavLink} to=\"/login\" icon={logoutIcon} />\r\n  </StyledWrapper>\r\n);\r\n\r\nSidebar.propTypes = {\r\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  pageContext: 'notes',\r\n};\r\nexport default withContext(Sidebar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sidebar from 'components/organisms/Sidebar/Sidebar';\r\n\r\nconst UserPageTemplate = ({ children }) => (\r\n  <>\r\n    <Sidebar />\r\n    {children}\r\n  </>\r\n);\r\n\r\nUserPageTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\r\n};\r\n\r\nexport default UserPageTemplate;\r\n","import styled from 'styled-components';\r\n\r\nconst Heading = styled.h1`\r\n  font-size: ${({ theme, big }) => (big ? theme.fontSize.xl : theme.fontSize.l)};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n\r\n  @media (max-width: 576px) {\r\n    font-size: ${({ theme, big }) => (big ? theme.fontSize.m : theme.fontSize.s)};\r\n  }\r\n`;\r\n\r\nexport default Heading;\r\n","import styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  padding: 15px 30px;\r\n  font-size: ${({ theme }) => theme.fontSize.xs};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  background-color: ${({ theme }) => theme.lightGray};\r\n  border: none;\r\n  border-radius: 50px;\r\n\r\n  @media (max-width: 576px) {\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    color: ${({ theme }) => theme.darkGrey};\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: black;\r\n  text-decoration: none;\r\n  padding: 0;\r\n  background-color:${({ activeColor, theme }) => (activeColor ? theme[activeColor] : theme.note)};\r\n  /* background-color: ${({ activeColor, theme }) => theme[activeColor]}; */\r\n  width: 105px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 50px;\r\n  font-family: 'Muli', sans-serif;\r\n  font-size: 10px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport withContext from 'hoc/withContext';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport { connect } from 'react-redux';\r\nimport { addItem as addItemAction } from 'actions';\r\nimport { Formik, Form } from 'formik';\r\n\r\nconst StyledWrapper = styled.div`\r\n  border-left: 10px solid ${({ theme, activecolor }) => theme[activecolor]};\r\n  z-index: 9999;\r\n  position: fixed;\r\n  display: flex;\r\n  padding: 100px 90px;\r\n  flex-direction: column;\r\n  right: 0;\r\n  top: 0;\r\n  height: 100vh;\r\n  width: 680px;\r\n  background-color: white;\r\n  box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);\r\n  transform: translate(${({ isVisible }) => (isVisible ? '0' : '100%')});\r\n  transition: transform 0.25s ease-in-out;\r\n\r\n  @media (max-width: 576px) {\r\n    width: 80vw;\r\n    padding: 50px 10px;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledTextArea = styled(Input)`\r\n  margin: 30px 0 100px;\r\n  border-radius: 20px;\r\n  height: 30vh;\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst NewItemBar = ({ pageContext, isVisible, addItem, handleClose }) => (\r\n  <StyledWrapper isVisible={isVisible} activecolor={pageContext}>\r\n    <Heading big>Create new {pageContext}</Heading>\r\n    <Formik\r\n      initialValues={{ title: '', content: '', articleUrl: '', twitterName: '', created: '' }}\r\n      onSubmit={(values) => {\r\n        addItem(pageContext, values);\r\n        handleClose();\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleBlur }) => (\r\n        <StyledForm>\r\n          <StyledInput\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"title\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.title}\r\n          />\r\n          {pageContext === 'twitters' && (\r\n            <StyledInput\r\n              placeholder=\"twitter name \"\r\n              type=\"text\"\r\n              name=\"twitterName\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.twitterName}\r\n            />\r\n          )}\r\n          {pageContext === 'articles' && (\r\n            <StyledInput\r\n              placeholder=\"link\"\r\n              type=\"text\"\r\n              name=\"articleUrl\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.articleUrl}\r\n            />\r\n          )}\r\n          <StyledTextArea\r\n            name=\"content\"\r\n            as=\"textarea\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.content}\r\n          />\r\n          <Button type=\"submit\" activecolor={pageContext}>\r\n            Add Note\r\n          </Button>\r\n        </StyledForm>\r\n      )}\r\n    </Formik>\r\n  </StyledWrapper>\r\n);\r\n\r\nNewItemBar.propTypes = {\r\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\r\n  isVisible: PropTypes.bool,\r\n  addItem: PropTypes.func.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nNewItemBar.defaultProps = {\r\n  pageContext: 'notes',\r\n  isVisible: false,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (itemType, itemContent) => dispatch(addItemAction(itemType, itemContent)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(withContext(NewItemBar));\r\n","export const removeItem = (itemType, id) => {\r\n  return {\r\n    type: 'REMOVE_ITEM',\r\n    payload: {\r\n      itemType,\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addItem = (itemType, itemContent) => {\r\n  const getId = () => `_${Math.random().toString(36).substr(2, 9)}`; // funkcja generujca id\r\n\r\n  return {\r\n    type: 'ADD_ITEM',\r\n    payload: {\r\n      itemType,\r\n      item: {\r\n        id: getId(),\r\n        ...itemContent,\r\n      },\r\n    },\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport UserPageTemplate from 'templates/UserPageTemplate';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\r\nimport NewItemBar from 'components/organisms/NewItemBar/NewItemBar';\r\nimport plusIcon from 'assets/icons/plus.svg';\r\nimport withContext from 'hoc/withContext';\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: relative;\r\n  padding: 25px 150px 25px 70px;\r\n\r\n  @media (max-width: 576px) {\r\n    padding: 25px 10px 25px 20px;\r\n  }\r\n`;\r\n\r\nconst StyledGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 85px;\r\n\r\n  @media (max-width: 1500px) {\r\n    grid-gap: 45px;\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (max-width: 1100px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst StyledPageHeader = styled.div`\r\n  margin: 25px 0 50px 0;\r\n`;\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 25px 0 0 0;\r\n\r\n  ::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nconst StyledButtonIcon = styled(ButtonIcon)`\r\n  position: fixed;\r\n  bottom: 40px;\r\n  right: 40px;\r\n  background-color: ${({ activecolor, theme }) => theme[activecolor]};\r\n  background-size: 35%;\r\n  border-radius: 50px;\r\n  z-index: 10000;\r\n`;\r\n\r\nclass GridTemplate extends Component {\r\n  state = {\r\n    isNewItemBarVisible: false,\r\n  };\r\n\r\n  toggleNewItemBar = () => {\r\n    this.setState((prevState) => ({\r\n      isNewItemBarVisible: !prevState.isNewItemBarVisible,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { children, pageContext } = this.props;\r\n    const { isNewItemBarVisible } = this.state;\r\n\r\n    return (\r\n      <UserPageTemplate>\r\n        <StyledWrapper>\r\n          <StyledPageHeader>\r\n            <StyledHeading big as=\"h1\">\r\n              {pageContext}\r\n            </StyledHeading>\r\n          </StyledPageHeader>\r\n          <StyledGrid>{children}</StyledGrid>\r\n          <StyledButtonIcon\r\n            onClick={this.toggleNewItemBar}\r\n            icon={plusIcon}\r\n            activecolor={pageContext}\r\n          />\r\n          <NewItemBar handleClose={this.toggleNewItemBar} isVisible={isNewItemBarVisible} />\r\n        </StyledWrapper>\r\n      </UserPageTemplate>\r\n    );\r\n  }\r\n}\r\n\r\nGridTemplate.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\r\n};\r\n\r\nGridTemplate.defaultProps = {\r\n  pageContext: 'notes',\r\n};\r\n\r\nexport default withContext(GridTemplate);\r\n","import styled from 'styled-components';\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n\r\n  @media (max-width: 576px) {\r\n    font-size: ${({ theme }) => theme.fontSize.xs};\r\n  }\r\n`;\r\n\r\nexport default Paragraph;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Redirect } from 'react-router-dom';\r\n\r\nimport styled, { css } from 'styled-components';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\n\r\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\r\nimport LinkIcon from 'assets/icons/chain.svg';\r\nimport rubbishIcon from 'assets/icons/rubbish.svg';\r\nimport { connect } from 'react-redux';\r\nimport { removeItem as removeItemAction } from 'actions';\r\nimport withContext from 'hoc/withContext';\r\n\r\nconst StyledWrapper = styled.div`\r\n  min-height: 380px;\r\n  box-shadow: 0 10px 30px -10px hsla(0, 0%, 0%, 0.1);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-rows: 0.25fr 1fr;\r\n\r\n  @media (max-width: 576px) {\r\n    min-height: 200px;\r\n  }\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  position: relative;\r\n  padding: 17px 30px;\r\n  background-color: ${({ activeColor, theme }) => (activeColor ? theme[activeColor] : 'white')};\r\n\r\n  :first-of-type {\r\n    z-index: 9999;\r\n  }\r\n\r\n  ${({ flex }) =>\r\n    flex &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n    `}\r\n`;\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 5px 0 0;\r\n  padding-right: ${({ pageContext, twitters }) => (pageContext === twitters ? '50px' : '20px')};\r\n\r\n  @media (max-width: 576px) {\r\n    padding-right: ${({ pageContext, twitters }) => (pageContext === twitters ? '30px' : '20px')};\r\n  }\r\n`;\r\n\r\nconst StyledAvatar = styled.img`\r\n  width: 70px;\r\n  height: 70px;\r\n  border-radius: 50px;\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n\r\n  @media (max-width: 576px) {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nconst StyledLinkButton = styled.a`\r\n  display: block;\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50px;\r\n  background: white url(${LinkIcon}) no-repeat;\r\n  background-size: 60%;\r\n  background-position: 50%;\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    const { id, pageContext, title, twitterName, articleUrl, content, removeItem } = this.props;\r\n    // const { redirect } = this.state;\r\n\r\n    // if (redirect) {\r\n    //   return <Redirect to={`${pageContext}/details/${id}`} />;\r\n    // }\r\n\r\n    return (\r\n      <StyledWrapper onClick={this.handleCardClick}>\r\n        <InnerWrapper activeColor={pageContext}>\r\n          <StyledHeading>{title}</StyledHeading>\r\n          {pageContext === 'twitters' && (\r\n            <StyledAvatar src={`https://avatars.io/twitter/${twitterName}`} />\r\n          )}\r\n          {pageContext === 'articles' && <StyledLinkButton href={articleUrl} />}\r\n        </InnerWrapper>\r\n        <InnerWrapper flex>\r\n          <Paragraph>{content}</Paragraph>\r\n\r\n          <ButtonIcon card icon={rubbishIcon} onClick={() => removeItem(pageContext, id)} />\r\n        </InnerWrapper>\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\r\n  title: PropTypes.string.isRequired,\r\n  twitterName: PropTypes.string,\r\n  articleUrl: PropTypes.string,\r\n  content: PropTypes.string.isRequired,\r\n  removeItem: PropTypes.func.isRequired,\r\n};\r\n\r\nCard.defaultProps = {\r\n  pageContext: 'notes',\r\n  twitterName: null,\r\n  articleUrl: null,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeItem: (itemType, id) => dispatch(removeItemAction(itemType, id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(withContext(Card));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport GridTemplate from 'templates/GridTemplate';\r\nimport Card from 'components/molecules/Card/Card';\r\n\r\nconst Notes = ({ notes }) => (\r\n  <GridTemplate pageType=\"notes\">\r\n    {notes.map(({ title, content, created, id }) => (\r\n      <Card id={id} cardType=\"notes\" title={title} content={content} created={created} key={id} />\r\n    ))}\r\n  </GridTemplate>\r\n);\r\n\r\nNotes.propTypes = {\r\n  notes: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      created: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nNotes.defaultProps = {\r\n  notes: [],\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { notes } = state;\r\n  return { notes };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Notes);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport GridTemplate from 'templates/GridTemplate';\r\nimport Card from 'components/molecules/Card/Card';\r\n\r\nconst Articles = ({ articles }) => (\r\n  <GridTemplate pageType=\"articles\">\r\n    {articles.map(({ title, content, articleUrl, created, id }) => (\r\n      <Card\r\n        id={id}\r\n        cardType=\"articles\"\r\n        title={title}\r\n        content={content}\r\n        articleUrl={articleUrl}\r\n        created={created}\r\n        key={id}\r\n      />\r\n    ))}\r\n  </GridTemplate>\r\n);\r\n\r\nArticles.propTypes = {\r\n  articles: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      created: PropTypes.string.isRequired,\r\n      articleUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nArticles.defaultProps = {\r\n  articles: [],\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { articles } = state;\r\n  return { articles };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Articles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport GridTemplate from 'templates/GridTemplate';\r\nimport Card from 'components/molecules/Card/Card';\r\n\r\nconst Twitters = ({ twitters }) => (\r\n  <GridTemplate pageType=\"twitters\">\r\n    {twitters.map(({ title, content, twitterName, created, id }) => (\r\n      <Card\r\n        id={id}\r\n        cardType=\"twitters\"\r\n        title={title}\r\n        content={content}\r\n        twitterName={twitterName}\r\n        created={created}\r\n        key={id}\r\n      />\r\n    ))}\r\n  </GridTemplate>\r\n);\r\n\r\nTwitters.propTypes = {\r\n  twitters: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      twitterName: PropTypes.string.isRequired,\r\n      created: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nTwitters.defaultProps = {\r\n  twitters: [],\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { twitters } = state;\r\n  return { twitters };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Twitters);\r\n","export const routes = {\r\n  home: '/',\r\n  notes: '/notes',\r\n  twitters: '/twitters',\r\n  articles: '/articles',\r\n  new: '/:pageType(twitters|notes|articles)/new',\r\n};\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport MainTemplate from 'templates/MainTemplate';\r\nimport store from 'store';\r\nimport Notes from 'views/Notes';\r\nimport Articles from 'views/Articles';\r\nimport Twitters from 'views/Twitters';\r\n\r\nimport { routes } from 'routes';\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <MainTemplate>\r\n        <Switch>\r\n          <Route exact path={routes.home} render={() => <Redirect to=\"/notes\" />} />\r\n          <Route exact path={routes.notes} component={Notes} />\r\n\r\n          <Route exact path={routes.articles} component={Articles} />\r\n\r\n          <Route exact path={routes.twitters} component={Twitters} />\r\n        </Switch>\r\n      </MainTemplate>\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Root from 'views/Root';\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}